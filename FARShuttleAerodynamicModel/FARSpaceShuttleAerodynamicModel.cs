

using System;
using System.Linq;
using FerramAerospaceResearch;
using static FinePrint.ContractDefs;

// ReSharper disable once CheckNamespace
namespace ferram4
{
    /// <summary>
    ///     This calculates the lift and drag on a wing in the atmosphere
    ///     It uses Prandtl lifting line theory to calculate the basic lift and drag coefficients and includes compressibility
    ///     corrections for subsonic and supersonic flows; transonic regime has placeholder
    /// </summary>
    public class FARSpaceShuttleAerodynamicModel : FARWingAerodynamicModel
    {

        private double radiansToDegrees = (180 / Math.PI);

        /*
        coefficients taken from "OPERATIONAL AERODYNAMIC DATA BOOK VOL1 -   SEPTEMBER 1985
         */

        private double[] shuttleAoAArr = { -10, -5, -2.5, 0, 2.5, 5, 7.5, 10, 12.5, 15, 17.5, 20, 22.5, 25, 30, 35, 40, 45, 50};

        private double[] shuttleMachArr = { 0.25, 0.4, 0.6, 0.8, 0.85, 0.9, 0.92, 0.95, 0.98, 1.05, 1.1, 1.2, 1.3, 1.5, 2, 2.5, 3, 4, 5, 8, 10, 15, 20, 25, 30};


        private double maxOverridableAoA = 50 * Math.PI / 180;
        private double minOverridableAoA = -10 * Math.PI / 180;

        private double maxOverridableMach = 30;
        private double minOverridableMach = 0.25;

        private double[,] shuttleClTable =
        {
            {-0.5028,-0.25906,-0.15202,-0.05,0.06214,0.17453,0.29705,0.40448,0.51599,0.63581,0.77676,0.91657,1.00634,1.08964,1.08964,1.08964,1.08964,1.08964,1.08964},
            {-0.51097,-0.27397,-0.16199,-0.05,0.06212,0.17448,0.29691,0.40924,0.52757,0.65002,0.78385,0.92529,1.01512,1.08846,1.08846,1.08846,1.08846,1.08846,1.08846},
            {-0.52957,-0.2887,-0.17188,-0.055,0.07201,0.17928,0.30657,0.41674,0.54905,0.67426,0.79709,0.92851,1.01007,1.04489,1.04489,1.04489,1.04489,1.04489,1.04489},
            {-0.58454,-0.32751,-0.19155,-0.065,0.06176,0.18859,0.31963,0.44384,0.5648,0.68162,0.79087,0.89578,0.93184,0.92299,0.92299,0.92299,0.92299,0.92299,0.92299},
            {-0.59773,-0.3379,-0.19632,-0.062,0.06652,0.19295,0.31838,0.44172,0.56565,0.67309,0.77995,0.8769,0.91266,0.90795,0.90795,0.90795,0.90795,0.90795,0.90795},
            {-0.61005,-0.34601,-0.20588,-0.06,0.07101,0.20356,0.32413,0.44572,0.56794,0.68323,0.79401,0.89485,0.92074,0.93837,0.93837,0.93837,0.93837,0.93837,0.93837},
            {-0.62831,-0.35039,-0.21553,-0.06,0.07563,0.21579,0.34997,0.4769,0.58585,0.70567,0.81577,0.91619,0.95994,0.96751,0.96751,0.96751,0.96751,0.96751,0.96751},
            {-0.65514,-0.35897,-0.21485,-0.06,0.08498,0.23947,0.38783,0.51887,0.6466,0.76535,0.86501,0.96429,1.00227,1.02232,1.02232,1.02232,1.02232,1.02232,1.02232},
            {-0.65616,-0.36172,-0.19399,-0.055,0.09414,0.24762,0.38955,0.52999,0.66026,0.77783,0.89069,0.99805,1.04837,1.07579,1.07579,1.07579,1.07579,1.07579,1.07579},
            {-0.64808,-0.36027,-0.2031,-0.047,0.10315,0.25552,0.39173,0.53602,0.66393,0.78377,0.89596,1.00286,1.06699,1.10328,1.10328,1.10328,1.10328,1.10328,1.10328},
            {-0.64225,-0.35685,-0.19292,-0.036,0.10796,0.25513,0.39121,0.53054,0.66357,0.77863,0.89086,1.00255,1.0656,1.11188,1.11188,1.11188,1.11188,1.11188,1.11188},
            {-0.61158,-0.33449,-0.18275,-0.025,0.1046,0.25014,0.38627,0.51767,0.63927,0.75952,0.85608,0.95636,1.03541,1.09985,1.09985,1.09985,1.09985,1.09985,1.09985},
            {-0.57681,-0.30454,-0.16776,-0.023,0.10295,0.24043,0.37178,0.49146,0.61835,0.72557,0.83073,0.92538,1.00114,1.07176,1.07176,1.07176,1.07176,1.07176,1.07176},
            {-0.48844,-0.25188,-0.12989,-0.015,0.09317,0.21606,0.32805,0.42874,0.54671,0.64381,0.74311,0.83834,0.91858,0.99205,0.99205,0.99205,0.99205,0.99205,0.99205},
            {-0.36885,-0.19695,-0.09888,-0.017,0.08419,0.16125,0.24173,0.33103,0.41958,0.50777,0.60244,0.68871,0.76904,0.84561,0.99835,0.99835,0.99835,0.99835,0.99835},
            {-0.31514,-0.16705,-0.10456,-0.0429,0.02995,0.10458,0.18906,0.27135,0.35229,0.43483,0.52033,0.60168,0.67886,0.76551,0.91867,0.91867,0.91867,0.91867,0.91867},
            {-0.29383,-0.16922,-0.10504,-0.037,0.02048,0.085,0.15609,0.22528,0.29513,0.36604,0.44227,0.52215,0.60751,0.68386,0.84307,0.97219,1.07919,1.15575,1.15575},
            {-0.22874,-0.13893,-0.1005,-0.0443,0.01111,0.06174,0.11881,0.18185,0.2473,0.31897,0.39229,0.46559,0.53159,0.61884,0.76946,0.8953,1.00341,1.07904,1.07904},
            {-0.19854,-0.12424,-0.09081,-0.04724,0.00542,0.04301,0.09656,0.1522,0.21351,0.27892,0.35079,0.42351,0.49654,0.57019,0.72044,0.84607,0.96129,1.03683,1.08629},
            {-0.18641,-0.12402,-0.08913,-0.0554,-0.02023,0.01774,0.05965,0.10504,0.16115,0.22632,0.29996,0.36492,0.44356,0.51805,0.66845,0.79881,0.91017,0.98747,1.03614},
            {-0.18641,-0.12402,-0.08913,-0.0554,-0.02023,0.01754,0.05558,0.10002,0.15328,0.21732,0.29043,0.35587,0.43474,0.50936,0.64465,0.78362,0.884,0.96803,1.02007},
            {-0.18641,-0.12402,-0.08913,-0.0554,-0.02023,0.01754,0.05558,0.10002,0.15328,0.21732,0.29043,0.35587,0.43474,0.50935,0.64465,0.78382,0.884,0.96803,1.02007},
            {-0.18541,-0.12402,-0.08913,-0.0554,-0.02023,0.01754,0.05558,0.10002,0.15328,0.21732,0.29043,0.35587,0.43474,0.50936,0.64455,0.78382,0.884,0.96803,1.02007},
            {-0.18541,-0.12402,-0.08913,-0.0554,-0.02023,0.01754,0.05558,0.10002,0.15328,0.21732,0.29043,0.35587,0.43474,0.50936,0.64455,0.78382,0.884,0.96803,1.02007},
            { -0.18541,-0.12402,-0.08913,-0.0554,-0.02023,0.01754,0.05558,0.10002,0.15328,0.21732,0.29043,0.35587,0.43474,0.50936,0.64455,0.78382,0.884,0.96803,1.02007}
        };

        private double[,] shuttleCdTable =
        {
            {0.11485,0.07985,0.0717,0.0684,0.06687,0.07038,0.08056,0.09599,0.12125,0.15784,0.21346,0.28859,0.36651,0.45537,0.45537,0.45537,0.45537,0.45537,0.45537},
            {0.11975,0.08119,0.07263,0.0681,0.06747,0.07098,0.08145,0.09775,0.12944,0.16278,0.21758,0.29389,0.37144,0.45793,0.45793,0.45793,0.45793,0.45793,0.45793},
            {0.13521,0.08489,0.07517,0.0702,0.07011,0.0735,0.08464,0.10146,0.13381,0.18632,0.26837,0.35519,0.43592,0.50401,0.50401,0.50401,0.50401,0.50401,0.50401},
            {0.16897,0.08953,0.08323,0.0763,0.07557,0.08175,0.10038,0.13188,0.17827,0.23303,0.30939,0.38957,0.45493,0.50539,0.50539,0.50539,0.50539,0.50539,0.50539},
            {0.18,0.10786,0.08675,0.082,0.08318,0.08916,0.1099,0.14389,0.1919,0.25055,0.31973,0.39759,0.46803,0.51375,0.51375,0.51375,0.51375,0.51375,0.51375},
            {0.19703,0.11831,0.09887,0.0907,0.09309,0.10579,0.1275,0.16155,0.21031,0.27056,0.34158,0.42137,0.48172,0.54316,0.54316,0.54316,0.54316,0.54316,0.54316},
            {0.20287,0.12552,0.1071,0.0998,0.1018,0.11515,0.13806,0.17477,0.22198,0.2836,0.35877,0.43584,0.50467,0.56348,0.56348,0.56348,0.56348,0.56348,0.56348},
            {0.23925,0.14223,0.12269,0.1145,0.11702,0.13127,0.15896,0.19583,0.24923,0.31191,0.38252,0.46452,0.53313,0.59974,0.59974,0.59974,0.59974,0.59974,0.59974},
            {0.25227,0.16817,0.14461,0.1346,0.13644,0.15286,0.18221,0.22487,0.27902,0.34259,0.41746,0.50331,0.57664,0.65071,0.65071,0.65071,0.65071,0.65071,0.65071},
            {0.26933,0.1847,0.16251,0.1541,0.15935,0.17724,0.20398,0.24255,0.29479,0.35909,0.43401,0.51932,0.59902,0.67457,0.67457,0.67457,0.67457,0.67457,0.67457},
            {0.27358,0.18942,0.16647,0.1584,0.16376,0.18173,0.20794,0.24485,0.29645,0.35895,0.43355,0.52016,0.59994,0.67979,0.67979,0.67979,0.67979,0.67979,0.67979},
            {0.27477,0.19259,0.17013,0.1514,0.16502,0.18139,0.20709,0.24298,0.29055,0.35301,0.42081,0.5009,0.56377,0.6701,0.6701,0.6701,0.6701,0.6701,0.6701},
            {0.27037,0.19067,0.16958,0.1611,0.16395,0.17763,0.20226,0.23613,0.29325,0.34037,0.40809,0.48367,0.552,0.64751,0.64751,0.64751,0.64751,0.64751,0.64751},
            {0.25326,0.18445,0.16572,0.1577,0.15852,0.16938,0.18964,0.21755,0.25989,0.30958,0.37008,0.43922,0.51308,0.59368,0.59368,0.59368,0.59368,0.59368,0.59368},
            {0.21167,0.15837,0.14245,0.1349,0.135,0.14189,0.15579,0.1765,0.20958,0.24932,0.30079,0.35911,0.42462,0.49836,0.67501,0.67501,0.67501,0.67501,0.67501},
            {0.18959,0.141,0.12598,0.1186,0.11632,0.12068,0.13301,0.15244,0.17951,0.21476,0.2599,0.31286,0.3732,0.447,0.61723,0.61723,0.61723,0.61723,0.61723},
            {0.1764,0.13105,0.11599,0.1068,0.10399,0.107,0.11677,0.13324,0.15649,0.18711,0.22579,0.27582,0.33639,0.40275,0.56977,0.76472,0.99301,1.24741,1.24741},
            {0.15782,0.11935,0.10538,0.0943,0.08937,0.09063,0.09815,0.11238,0.1338,0.16342,0.20107,0.24672,0.29758,0.36614,0.52265,0.70975,0.92759,1.16885,1.16885},
            {0.14843,0.11165,0.09795,0.0876,0.08226,0.08096,0.08634,0.09853,0.1176,0.14482,0.18106,0.22523,0.27765,0.33893,0.49216,0.67287,0.89082,1.1255,1.38996},
            {0.14122,0.10501,0.09067,0.08,0.07359,0.07142,0.07402,0.08216,0.0978,0.12245,0.15697,0.19614,0.24878,0.30876,0.45621,0.63575,0.8444,1.07445,1.33019},
            {0.14122,0.10501,0.09067,0.08,0.07359,0.0714,0.07348,0.08059,0.09544,0.11931,0.15302,0.19178,0.24394,0.30372,0.44343,0.62404,0.82113,1.0543,1.31104},
            {0.14122,0.10501,0.09067,0.08,0.07359,0.0714,0.07348,0.08059,0.09544,0.11931,0.15302,0.19178,0.24394,0.30372,0.44343,0.62404,0.82113,1.0543,1.31104},
            {0.14122,0.10501,0.09067,0.08,0.07359,0.0714,0.07348,0.08059,0.09544,0.11931,0.15302,0.19178,0.24394,0.30372,0.44343,0.62404,0.82113,1.0543,1.31104},
            {0.14122,0.10501,0.09067,0.08,0.07359,0.0714,0.07348,0.08059,0.09544,0.11931,0.15302,0.19178,0.24394,0.30372,0.44343,0.62404,0.82113,1.0543,1.31104},
            {0.14122,0.10501,0.09067,0.08,0.07359,0.0714,0.07348,0.08059,0.09544,0.11931,0.15302,0.19178,0.24394,0.30372,0.44343,0.62404,0.82113,1.0543,1.31104 }
        };

        private double[,] shuttleDeltaClTable =
        {
          {-0.2542317705773539, 0.03253853381250099, 0.014351106744327019, -0.004685836144988298, -0.021843703888936708, -0.03881360574843301, -0.05338025514345299, -0.070482251044451, -0.08636992616265105, -0.099893792408698, -0.07006182888823298, 0.011736432457309043, 0.009825928784630067, 0.00381037681874985, -0.030314777056450026, -0.031691336492519984, -0.05582246485939013, -0.07266855641009995, 1.1806500449655},
          {-0.264239440887287, 0.03112884867007601, 0.013148874832981994, -0.004685813848035202, -0.022645993692896604, -0.04040685971220201, -0.05575125461012104, -0.07259231201102001, -0.08778626037969206, -0.10139732852952199, -0.058734297957957926, 0.015051468519086009, 0.009595904195920157, 0.0014581870449699164, -0.0285818791808099, -0.03337435119337995, -0.05739640156147985, -0.07412693582181018, 1.2859487391858502},
          {-0.2870533409502759, 0.031948360007166, 0.013066620027023995, -0.005688373207996297, -0.022563524815080803, -0.04321838781901299, -0.05940079360370901, -0.07839957871728198, -0.09239519922468603, -0.1039336475863919, -0.032289130270121036, 0.01134400931610402, 0.0038778958681100484, -0.01227948415004998, -0.03313357988308985, -0.04750180242454005, -0.07472770796853001, -0.09648375311168012, 1.347046384686751},
          {-0.400923382597945, 0.02975672651358402, 0.011598854302120015, -0.008375339763886894, -0.028451492138381898, -0.048270797465293, -0.066678850613273, -0.08568015829917902, -0.10456781693634704, -0.06892367515781495, 0.002716871670858989, -0.00085297021420494, -0.01820939114604303, -0.04407747328760403, -0.052006381752835895, -0.08556375269550198, -0.1189662190165589, -0.075145870395674, 1.274419280591546},
          {-0.43355193843527495, 0.028403049262887003, 0.010802115009820007, -0.008593085871792305, -0.029285724526224508, -0.04972307567395001, -0.06973525345210302, -0.08903832708396398, -0.10757647393053699, -0.12810984489796995, -0.05562589825611197, -0.003954925155562061, -0.021453752866714026, -0.04699170297848898, -0.07324093902940798, -0.08933779479670101, -0.12371820531300404, -0.15144825827183006, 0.8957907533909548},
          {-0.473422736418448, 0.02746532512351496, 0.009363771061753012, -0.0090506872807464, -0.030570880833395694, -0.04995678825594499, -0.07102116185749302, -0.08987302672883202, -0.10838931690320003, -0.12664106592949598, -0.12167493373490601, -0.030223064532580945, -0.01777579664931006, -0.03885611118333698, -0.08442850019126702, -0.085956719673843, -0.117522292269163, -0.14496667816513098, 0.684954803372081},
          {-0.5412629750290922, 0.025533840625224957, 0.007053206937151002, -0.0093556820393427, -0.029876368797797606, -0.047044219927594, -0.064660477326553, -0.08128026642295999, -0.10159441318558599, -0.117946618559017, -0.134910835429065, -0.06156598701659999, -0.0072692172248149944, -0.030259857533280976, -0.07849401905529008, -0.08862264656143892, -0.11020168347521797, -0.13742420887844797, 0.6309181988845659},
          {-0.6432408721781201, 0.022323560260054, 0.006792407099836001, -0.009727974863371805, -0.0283426098220523, -0.04152770321076499, -0.05514388086741501, -0.06901098857305998, -0.08413728503153395, -0.09906914331323602, -0.11685726556799891, -0.10182627636686403, -0.018515717683169952, -0.015084809107819952, -0.06330886270516001, -0.08961576505883007, -0.0968688337144501, -0.12343104514242986, 0.608431969239245},
          {-0.669253416814099, 0.020497962686230997, 0.010841103500113997, -0.008952870916263699, -0.0268186444435749, -0.039062000351504006, -0.052770127518265986, -0.06266373751372695, -0.07577191600125599, -0.08918916392546306, -0.10298423186988193, -0.11626080227562996, -0.06146086656715999, -0.0003799837830800179, -0.04858194482427991, -0.09003748078259, -0.08594082480869003, -0.10921983832529991, 0.6133565568554817},
          {-0.701925058167908, 0.018590453226627, 0.009537774272316002, -0.007395503809814401, -0.02563279255442301, -0.03537307769221701, -0.04735848459809999, -0.051221557403268, -0.061088492862582, -0.06971571925402498, -0.08035268716154798, -0.09087484993693007, -0.10852069035671996, -0.08668712212754004, -0.034572625744180074, -0.07954621474852996, -0.10589857999982, -0.09430560053449999, 0.5778787144048709},
          {-0.7280883134209781, 0.017650141567702005, 0.01203955939228002, -0.005192521716093003, -0.025134876320468, -0.033832071337045966, -0.04364236709888997, -0.04445493640300707, -0.05045100139191394, -0.056745872914747975, -0.06485758652453599, -0.07221626060343012, -0.08825416604247005, -0.10628634560381989, -0.02607984126341001, -0.07024172498817993, -0.10305713532986993, -0.10149640805787019, 0.8022824485505959},
          {-0.7207722031121442, 0.01895352050604998, 0.014959248408090986, -0.0030016696099425984, -0.02672014908247601, -0.03168188876939401, -0.037199375985771, -0.03173483358206097, -0.034541612067518934, -0.033483540043076965, -0.03988580301729694, -0.045282023363137025, -0.05453638947601003, -0.06602261823193012, -0.11089275949231991, -0.05499313928270011, -0.08320338675639016, -0.1288213218758001, 1.030461667590688},
          {-0.449172472566282, 0.030375312564716983, 0.023187590303610006, -0.0026286984108003994, -0.032327322395078004, -0.03906933924265302, -0.039122596582615965, -0.031265744763859016, -0.027244558710609934, -0.024038262712537062, -0.02402499644620104, -0.026476051530536004, -0.03289033881163994, -0.040135101429130016, -0.07955910617553996, -0.10736852389255003, -0.09224725886718, -0.1602491646315899, 1.088206917402179},
          {0.30939343103974803, 0.03031486200636102, 0.013694282400367006, -0.0011153087090049023, -0.0173736901707454, -0.033351923484114004, -0.05058861023198502, -0.056132980146430034, -0.04512127268932897, -0.04399475168228806, -0.04343942801480705, -0.04089987146752494, -0.04409419998249109, -0.047878730545430015, -0.078692467472818, -0.14553150989653507, -0.18158767354079797, -0.17154754162000396, 0.6542693905097231},
          {0.393171430584425, 0.016334133989057004, 0.0080464008139354, -0.001961041818248202, -0.007945480822692405, -0.01934282102718002, -0.03134085909117898, -0.04434398328154204, -0.06339162595401898, -0.08014627569683203, -0.08406296341344599, -0.08316496808101004, -0.08816297974416398, -0.11115770735031305, -0.11439818012156999, -0.14040916939553993, -0.16145772225072996, -0.13149530480574012, 0.06358852265014814},
          {0.242747940237019, 0.013028535010049996, 0.002115490087386998, -0.007384980265597606, -0.0142310675860295, -0.021210976566654008, -0.027781289824657995, -0.03728146506277302, -0.049840174970704976, -0.06414510650431099, -0.09024008280494905, -0.11687851881274403, -0.12324243468068008, -0.119051463800386, -0.12346736470115405, -0.143933024556973, -0.15267806249708105, -0.126378975984491, -0.29853908263355},
          {0.09844463985025498, 0.007491891225106018, -0.00013179045181999083, -0.005906766713765103, -0.013337823255134901, -0.0199434160809671, -0.02708961229384399, -0.036659218042356, -0.04778024554966301, -0.07159258382242001, -0.091542601671188, -0.10838461898787599, -0.125051047333278, -0.13022338764279606, -0.12736626476633406, -0.12285861303636503, -0.11169497596738998, -0.07060269987766987, 0.46453264925324},
          {0.05408462570535, 0.01185910459985301, -0.0012621604052710095, -0.0062401459354487, -0.0117565053480855, -0.019177816056605596, -0.026661393337223005, -0.03821576524898701, -0.051297207924708016, -0.061041591384903005, -0.074866518548584, -0.08983459333037702, -0.11071102368944902, -0.12985917130375102, -0.12523419793545798, -0.126802822024772, -0.12312206831934991, -0.08000767186951019, 0.31376006693999203},
          {0.015144917838113003, 0.011497374092354004, 0.0015468871330804046, -0.006512593882266, -0.01101167102570326, -0.0198763723968914, -0.029060186466543098, -0.038642201666996015, -0.04676549664816401, -0.058232497069728995, -0.06997985481406405, -0.08488480948864202, -0.10056676890513899, -0.119735570615502, -0.13664964147223801, -0.1278919599855951, -0.12600347480158303, -0.08678537762967009, 0.40856255762871196},
          {-0.11734536091116002, 0.004708465713537002, -0.001953733100473601, -0.0074246184762799886, -0.013697602266561994, -0.0212060504172387, -0.0276780666707346, -0.035419117587211, -0.043509533410317006, -0.05273837470659401, -0.062422510934910996, -0.07497199026166701, -0.08651295109419899, -0.10087313877010196, -0.1284642647806391, -0.12033641406254203, -0.11830452496467603, -0.08429067163735193, 0.07462979055074004},
          {-0.16871250529022305, 0.002808981471517008, -0.0027739695817659005, -0.007784463216431205, -0.013425345086073199, -0.019242322113619998, -0.025504009160239698, -0.03283133516923399, -0.04079727096599599, -0.049591103048928026, -0.058021568469144, -0.06981628553889802, -0.08053593109789398, -0.09382316444431299, -0.12588997929869794, -0.11664614913304994, -0.11634407751833997, -0.08345455845704797, 0.13695423588147193},
          {-0.231868219974778, 0.00015622973217399583, -0.004666699149165912, -0.0085864571612922, -0.0123783099024006, -0.0164638643019515, -0.022181742526781303, -0.028252345918543004, -0.03499758714175201, -0.04198187971071499, -0.04905218601884703, -0.05933273549377399, -0.06830914472758798, -0.07967462417846699, -0.111637378861003, -0.122534933209824, -0.103518263595478, -0.07557116384926299, 0.3459137044803082},
          {-0.25223988541726006, -0.0009133627955779933, -0.0052856187333942956, -0.008721329990608505, -0.012000060711747498, -0.0155638470985132, -0.020786064626657497, -0.026403541890001006, -0.032672879589849005, -0.038805178233115994, -0.045055708213684015, -0.05436920205829704, -0.06230774165266201, -0.07253880225695303, -0.10346106458609194, -0.11587411360391697, -0.09731011915938104, -0.07244817495206501, 0.4995656600602709},
          {-0.26249158535166994, -0.0012062162142029847, -0.005461871773588103, -0.008701854808182204, -0.011740210799077302, -0.0151719754134866, -0.0201065357294877, -0.02566776686537399, -0.031581217527186, -0.03747519613876202, -0.04339539216964802, -0.05233522052010503, -0.059733887015882, -0.06926214711586903, -0.0984819637935419, -0.11154929792791901, -0.0935221634301, -0.07051942891338003, 0.6220371000404181},
          {-0.2665069342634956, -0.0012574019899299765, -0.005444413871663806, -0.008613842585702587, -0.011584042210525097, -0.0150002110787109, -0.0198836040183041, -0.025305267657570005, -0.031130625754883, -0.03694721893678499, -0.04278160478985901, -0.051583571213596024, -0.058779901065728, -0.067729105280108, -0.09505472657897995, -0.10824287739873706, -0.090968226136105, -0.06918301061741006, 0.7217089965163319},
        };

        private double[,] shuttleDeltaCdTable =
        {
          {0.1779935227639522, 0.004617194343952996, 0.007140609499282705, 0.008267537519210805, 0.007401494886495191, 0.005164954938646701, 0.00042962789857479977, -0.006525359735928396, -0.014614131640432002, -0.023597295553271003, -0.036822989117581, -0.09522865954092799, -0.10985795876479298, -0.11899645636048001, -0.16682989598014303, -0.22440263712946998, -0.29721087190947304, -0.367857088311852, -1.420760311520687},
          {0.19169620802453533, 0.004784652981943513, 0.007290347765856603, 0.008207837638245702, 0.007484369024467391, 0.005183956095994299, 0.0006082769104606006, -0.006172787521431203, -0.012970273665734985, -0.02260606680486199, -0.04665982880618999, -0.102136209739349, -0.11547697116108602, -0.125706319055521, -0.17461815710183504, -0.23290146683790997, -0.29866169000377396, -0.369371740093672, -1.548178761957889},
          {0.23550347284527023, 0.005165262294989606, 0.007708510846052702, 0.008629053753539201, 0.007922992461094194, 0.005327865296410689, 0.0010959633463016871, -0.005588984714768999, -0.012341728514808997, -0.018234943933019, -0.06397237925424698, -0.10446778725825401, -0.119200442154974, -0.134687505477045, -0.19386218131568006, -0.24756034771455193, -0.30063757510572797, -0.37804365934487905, -1.76285962101807},
          {0.30786221651632134, -0.0040310377275741965, -0.0004197498211557932, 0.00017975118943699964, -0.0009048265591015958, -0.003496472509203097, -0.006357118642546997, -0.010366637519535982, -0.014847926090985009, -0.049119516750535996, -0.116709970756017, -0.13692269173432497, -0.158916432917182, -0.181483801610743, -0.26132759067985506, -0.30687696009293297, -0.34202557949676304, -0.449389565132989, -2.35164726637279},
          {0.312661983209027, -0.012109880640968004, -0.011485212252952307, -0.010509113554905594, -0.011363083571557103, -0.014193145528505799, -0.016854475089868995, -0.020048350803797008, -0.02430453194325302, -0.02968629070057599, -0.09205124917247598, -0.154479568709642, -0.176209016755894, -0.20026842659158695, -0.26588137409603, -0.32676472343821195, -0.35787783815069196, -0.444547687544697, -2.03195966808269},
          {0.33537665065901345, -0.022714143603956002, -0.021796224648237203, -0.021550825667226603, -0.022342055533539698, -0.024002621459362994, -0.02662755911173799, -0.029376939400793, -0.03346902140416402, -0.03866318050648199, -0.05115840962486301, -0.14026080674665004, -0.18899495327710897, -0.209583007003954, -0.264038931576416, -0.331283271318644, -0.368193904047885, -0.454142780852424, -1.54711455290614},
          {0.3436597861114178, -0.025722480310475998, -0.024736567822587, -0.024366520292067997, -0.025266810605948, -0.02673733524564799, -0.028974161786652006, -0.031330782170503, -0.035771584311677984, -0.04077237766431496, -0.046371156422997994, -0.106196456049589, -0.18134375303232597, -0.20147208735967503, -0.254926865883292, -0.31125526705295103, -0.36821052327998804, -0.45358416443506405, -1.268018460532208},
          {0.44201055333312245, -0.02789682400769801, -0.027339061341749002, -0.02720746318721, -0.02804030782443699, -0.029222689546785002, -0.030255065015453997, -0.03284121227769399, -0.036139252253124005, -0.04109991047339795, -0.04782821700177203, -0.05618105801509704, -0.14951122003990497, -0.18548527873507492, -0.23736527427127596, -0.278250894133496, -0.365918799658051, -0.450128526283023, -0.8466362938566401},
          {0.475280224666745, -0.026212909555601016, -0.026647553541223015, -0.026919247268922003, -0.027912666014171014, -0.02854305662324899, -0.02898296777690601, -0.030747801189201007, -0.03405724709272201, -0.039075988396016004, -0.04524673477158503, -0.052751537981942986, -0.08802005230515403, -0.163330726537379, -0.21367783210097596, -0.25408147218288896, -0.357225370926074, -0.44159341162532195, -0.409554798288701},
          {0.5267659428810758, -0.02423587809723901, -0.024788218267583012, -0.02478286382307901, -0.02511661592480699, -0.025117174819432014, -0.026342965242158983, -0.030200176637183995, -0.035348817931783016, -0.041763409396940954, -0.04976304770867096, -0.05948866133561198, -0.07417983819965501, -0.0935220456974889, -0.17348508106809302, -0.265788333800889, -0.364789665909289, -0.452495053833496, 0.022877576058351057},
          {0.5451852475040264, -0.023451730227528, -0.024471408839655012, -0.024440831800640994, -0.024749325756320995, -0.024458559419831993, -0.025651455275114005, -0.029692555697552997, -0.034862796708462984, -0.041526256978237974, -0.04951178678700102, -0.05893541229547605, -0.07361476272245004, -0.09214187824847608, -0.172185262587774, -0.263992643797137, -0.36036749363197307, -0.445570169758164, 0.07338965796631292},
          {0.558226361262522, -0.022143704926591012, -0.023670689086823016, -0.025892476180111007, -0.024486819935618992, -0.023965201178355988, -0.025824890969043002, -0.030018684167983006, -0.035836268908451985, -0.04228990414873601, -0.05147855815022501, -0.06211595453922403, -0.08016400084206299, -0.09337574426499995, -0.17305015781575306, -0.26209585415030306, -0.35360232359396604, -0.46726526055570405, -0.018417547123164013},
          {0.515250834489656, -0.023172990344397987, -0.024041119571865, -0.023753844871183982, -0.024919374568642988, -0.025274356964509, -0.026089488478355988, -0.02936554970493699, -0.03170758826293102, -0.03962356715682702, -0.04704929291219201, -0.056688500197818015, -0.07160648319786594, -0.084767400352451, -0.15876023256614596, -0.23930287324675198, -0.3453490000270639, -0.48253648455141207, 0.013461663943354019},
          {0.33112718268815905, -0.02455993927643499, -0.02437880827637201, -0.024696744712737, -0.0255290734518, -0.026943603857331994, -0.028871979026153016, -0.033228030836483013, -0.036856786537973, -0.04276758859149704, -0.050470176328822, -0.06010230296304003, -0.07231004665938595, -0.08620280464016894, -0.15262247572106002, -0.26086690339933305, -0.364512894132576, -0.45736387665453604, -0.12525009448637503},
          {0.17133946917123002, -0.03346214097252201, -0.03380419293021901, -0.03433403909775101, -0.03503045434758301, -0.036073445202461016, -0.03953526155764901, -0.04452480977001899, -0.05032927158289399, -0.05806567659847203, -0.06652021109523498, -0.07608211486697597, -0.08972687679249702, -0.11482002942518699, -0.14924629279304003, -0.225644459717529, -0.31018618415413496, -0.383628352795858, -0.17973515639258197},
          {0.14086403913287296, -0.04056853669211999, -0.04060917312033101, -0.041198589361734, -0.042261393498944005, -0.04390829041909999, -0.047588260273802016, -0.053029378687872, -0.05987835896044501, -0.06772032094201103, -0.07893911339722301, -0.095260421183994, -0.108686362717969, -0.12143614701667699, -0.15124656326226604, -0.223429838407125, -0.298447430052627, -0.37122781906016294, -0.6510291295148181},
          {0.14216168108662003, -0.04126479605092301, -0.04130014162243299, -0.04224730902266101, -0.043307766156655, -0.045322433286549, -0.049642574009002, -0.05563767627793399, -0.062938901812017, -0.07506262238751199, -0.08710544993972699, -0.097460933048193, -0.10977799239726, -0.123611344612293, -0.15264492187852602, -0.18185273343752606, -0.21132277717798198, -0.23272807748954993, 1.069973789024636},
          {0.15403246487546599, -0.03505860066621701, -0.03384767905791, -0.0352195163954082, -0.036530312584222395, -0.0390221376950141, -0.04389120336925421, -0.051149224766981, -0.05983606011649699, -0.06863952287096702, -0.07921321233411502, -0.09090439942620498, -0.104758591100088, -0.11769008399923497, -0.14649971752167806, -0.17779696109238297, -0.20887018788219103, -0.23208237965296996, 0.5210262002999348},
          {0.16126563439983893, -0.031127804515887994, -0.030396816358092812, -0.031162532718671906, -0.032537429236402196, -0.035594866474025995, -0.04139936205444599, -0.04855739342265541, -0.056562595849811, -0.06606150796900499, -0.07652619192348402, -0.08862635499552798, -0.101803084811072, -0.11573235702278498, -0.14498704240586696, -0.17705823571714402, -0.20730466778907797, -0.23090971951294992, 0.90178164214694},
          {0.16966674005107524, -0.030292659649350004, -0.029818804944338993, -0.031158112355936206, -0.032747488414073204, -0.0360413351298181, -0.0418624978871968, -0.049282407193646995, -0.05793107605429369, -0.067634879588229, -0.078214802084183, -0.0906102735806, -0.10308382350270898, -0.11675767681065802, -0.145850988115083, -0.17657235497740598, -0.207023102980605, -0.22990944570899008, -1.0297428106500002},
          {0.1807421368744156, -0.028301971815247004, -0.02784446966127979, -0.029187661270630494, -0.030776122626900097, -0.034044889765435495, -0.0399119330273612, -0.047515496167231, -0.05626677927167059, -0.066041583288008, -0.07661576037728601, -0.08899453294990001, -0.10145766701869302, -0.11503941081390698, -0.145369476759239, -0.175458145838705, -0.20772832535697605, -0.23054031759232008, -1.61762399855311},
          {0.1826073133866256, -0.029361577556673, -0.028944524458521095, -0.0303838082633551, -0.031930566578721495, -0.0352270550031652, -0.041087884111564894, -0.0485639436285349, -0.057163677447740896, -0.066713104398712, -0.07707751000964201, -0.08920609372030901, -0.10134924506041301, -0.11456093954308402, -0.14407935541990202, -0.17340967588828393, -0.20520737046970106, -0.23600824286769007, -2.6910944713777702},
          {0.18134232443987797, -0.028664446041175004, -0.02825832319134619, -0.029720344884788898, -0.031265810513383396, -0.03456435624474, -0.040394016382818705, -0.0478292544580818, -0.05638368231395101, -0.065852488306227, -0.076120653217433, -0.08814234935789, -0.100196510374888, -0.113359334018244, -0.151113857409941, -0.17361120144964204, -0.206707433274111, -0.24119775233280993, -3.48153243879045},
          {0.1795319834634741, -0.027058611070187005, -0.0266403311915398, -0.0280828305991774, -0.029629427137206205, -0.032924411280294996, -0.0387439130709434, -0.046167447823733894, -0.05469547931651699, -0.06414613990975901, -0.074413728271433, -0.08647513734813701, -0.09861506357844302, -0.11187355188677597, -0.158882204422846, -0.18690986291528494, -0.208379262272683, -0.2447765715620699, -4.0808694122188},
          {0.17582987532490707, -0.025426640674813997, -0.024993193488898294, -0.026409885545896704, -0.027958138456391494, -0.03125117030933321, -0.0370567985733684, -0.0444729526575251, -0.052999706817172296, -0.062474596512226, -0.072800820301683, -0.084930160725046, -0.09712578044678499, -0.11044887746631599, -0.16551093109404102, -0.19918539386814904, -0.210406778343183, -0.24776793987804013, -4.56363506947059},
        };

        protected override Vector3d CalculateAerodynamicCenter(double MachNumber, double AoA, Vector3d WC)
        {
            //very brutal
            return WC;
        }

        protected override void CalculateCoefficients(double MachNumber, double AoA, double skinFrictionCoefficient)
        {
            minStall = 0;

            rawLiftSlope = CalculateSubsonicLiftSlope(MachNumber); // / AoA;     //Prandtl lifting Line


            CalculateWingCamberInteractions(MachNumber, AoA, out double ACshift, out double ACweight);
            DetermineStall(AoA);

            double beta = Math.Sqrt(MachNumber * MachNumber - 1);
            if (double.IsNaN(beta) || beta < 0.66332495807107996982298654733414)
                beta = 0.66332495807107996982298654733414;

            double TanSweep = Math.Sqrt((1 - cosSweepAngle * cosSweepAngle).Clamp(0, 1)) / cosSweepAngle;
            double beta_TanSweep = beta / TanSweep;


            double Cd0 = CdCompressibilityZeroLiftIncrement(MachNumber, cosSweepAngle, TanSweep, beta_TanSweep, beta) +
                         2 * skinFrictionCoefficient;
            double CdMax = CdMaxFlatPlate(MachNumber, beta);
            e = FARAeroUtil.CalculateOswaldsEfficiencyNitaScholz(effective_AR, cosSweepAngle, Cd0, TaperRatio);
            piARe = effective_AR * e * Math.PI;

            double CosAoA = Math.Cos(AoA);

            if (MachNumber <= 0.8)
            {
                double Cn = liftslope;
                FinalLiftSlope = liftslope;
                double sinAoA = Math.Sqrt((1 - CosAoA * CosAoA).Clamp(0, 1));
                Cl = Cn * CosAoA * Math.Sign(AoA);

                Cl += ClIncrementFromRear;
                Cl *= sinAoA;

                if (Math.Abs(Cl) > Math.Abs(ACweight))
                    ACshift *= Math.Abs(ACweight / Cl).Clamp(0, 1);
                Cd = Cl * Cl / piARe; //Drag due to 3D effects on wing and base constant
                Cd += Cd0;
            }
            /*
             * Supersonic nonlinear lift / drag code
             *
             */
            else if (MachNumber > 1.4)
            {
                double coefMult = 2 / (FARAeroUtil.CurrentAdiabaticIndex * MachNumber * MachNumber);

                double supersonicLENormalForceFactor = CalculateSupersonicLEFactor(beta, TanSweep, beta_TanSweep);

                double normalForce = GetSupersonicPressureDifference(MachNumber, AoA);
                FinalLiftSlope = coefMult * normalForce * supersonicLENormalForceFactor;

                Cl = FinalLiftSlope * CosAoA * Math.Sign(AoA);
                Cd = beta * Cl * Cl / piARe;

                Cd += Cd0;
            }
            /*
             * Transonic nonlinear lift / drag code
             * This uses a blend of subsonic and supersonic aerodynamics to try and smooth the gap between the two regimes
             */
            else
            {
                //This determines the weight of supersonic flow; subsonic uses 1-this
                double supScale = 2 * MachNumber;
                supScale -= 6.6;
                supScale *= MachNumber;
                supScale += 6.72;
                supScale *= MachNumber;
                supScale += -2.176;
                supScale *= -4.6296296296296296296296296296296;

                double Cn = liftslope;
                double sinAoA = Math.Sqrt((1 - CosAoA * CosAoA).Clamp(0, 1));
                Cl = Cn * CosAoA * sinAoA * Math.Sign(AoA);

                if (MachNumber <= 1)
                {
                    Cl += ClIncrementFromRear * sinAoA;
                    if (Math.Abs(Cl) > Math.Abs(ACweight))
                        ACshift *= Math.Abs(ACweight / Cl).Clamp(0, 1);
                }

                FinalLiftSlope = Cn * (1 - supScale);
                Cl *= 1 - supScale;

                double M = MachNumber.Clamp(1.2, double.PositiveInfinity);

                double coefMult = 2 / (FARAeroUtil.CurrentAdiabaticIndex * M * M);

                double supersonicLENormalForceFactor = CalculateSupersonicLEFactor(beta, TanSweep, beta_TanSweep);

                double normalForce = GetSupersonicPressureDifference(M, AoA);

                double supersonicLiftSlope = coefMult * normalForce * supersonicLENormalForceFactor * supScale;
                FinalLiftSlope += supersonicLiftSlope;


                Cl += CosAoA * Math.Sign(AoA) * supersonicLiftSlope;

                double effectiveBeta = beta * supScale + (1 - supScale);

                Cd = effectiveBeta * Cl * Cl / piARe;

                Cd += Cd0;
            }

            //do not override unless AoA is acceptable
            if (minOverridableAoA <= AoA && AoA <= maxOverridableAoA && minOverridableMach <= MachNumber && MachNumber <= maxOverridableMach) {
                double[] shuttleCoeffs = getSpaceShuttleCoeffs(MachNumber, AoA);
                Cl = shuttleCoeffs[0];
                Cd = shuttleCoeffs[1];
            }

            //AC shift due to flaps
            Vector3d ACShiftVec;
            if (!double.IsNaN(ACshift) && MachNumber <= 1)
                ACShiftVec = ACshift * ParallelInPlane;
            else
                ACShiftVec = Vector3d.zero;

            //Stalling effects
            stall = stall.Clamp(minStall, 1);

            //AC shift due to stall
            if (stall > 0)
                ACShiftVec -= 0.75 / criticalCl * MAC_actual * Math.Abs(Cl) * stall * ParallelInPlane * CosAoA;

            Cl -= Cl * stall * 0.769;
            Cd += Cd * stall * 3;
            //Cd = Math.Max(Cd, CdMax * (1 - CosAoA * CosAoA));

            Cd = Math.Max(Cd, 0.01);    //artificial

            AerodynamicCenter += ACShiftVec;

            Cl *= wingInteraction.ClInterferenceFactor;

            FinalLiftSlope *= wingInteraction.ClInterferenceFactor;

            ClIncrementFromRear = 0;

            double shuttleLD = Cl / Cd;
           // UnityEngine.Debug.Log(String.Format("Shuttle Mach, Aoa, Cl, Cd, LD :  {0}, {1}, {2}, {3}, {4}", MachNumber, AoA * radiansToDegrees, Cl, Cd, shuttleLD));

        }

        private double[] getSpaceShuttleCoeffs(double mach, double aoaRad)
        {
            double aoa = aoaRad * radiansToDegrees;

            int m_idx = 0;
            for (int i = 1; i < shuttleMachArr.Length; i++)
            {
                if (shuttleMachArr[i] >= mach)
                {
                    m_idx = i - 1;
                    break;
                }
            }

            int a_idx = 0;
            for (int i = 1; i < shuttleAoAArr.Length; i++)
            {
                if (shuttleAoAArr[i] >= aoa)
                {
                    a_idx = i - 1;
                    break;
                }
            }

            double aoa1 = shuttleAoAArr[a_idx];
            double aoa2 = shuttleAoAArr[a_idx + 1];

            double mach1 = shuttleMachArr[m_idx];
            double mach2 = shuttleMachArr[m_idx + 1];

            double daoa = aoa2 - aoa1;
            double dmach = mach2 - mach1;

            double del_aoa = aoa - aoa1;
            double del_mach = mach - mach1;

            double Cl1 = shuttleClTable[m_idx, a_idx];
            double Cl2 = shuttleClTable[m_idx, a_idx + 1];
            double Cl3 = shuttleClTable[m_idx + 1, a_idx];
            double Cl4 = shuttleClTable[m_idx + 1, a_idx + 1];

            double Cla1 = ((Cl3 - Cl1) / dmach) * del_mach + Cl1;
            double Cla2 = ((Cl4 - Cl2) / dmach) * del_mach + Cl2;
            double Cl = ((Cla2 - Cla1) / daoa) * del_aoa + Cla1;

            double deltaCl1 = shuttleDeltaClTable[m_idx, a_idx];
            double deltaCl2 = shuttleDeltaClTable[m_idx, a_idx + 1];
            double deltaCl3 = shuttleDeltaClTable[m_idx + 1, a_idx];
            double deltaCl4 = shuttleDeltaClTable[m_idx + 1, a_idx + 1];

            double deltaCla1 = ((deltaCl3 - deltaCl1) / dmach) * del_mach + deltaCl1;
            double deltaCla2 = ((deltaCl4 - deltaCl2) / dmach) * del_mach + deltaCl2;
            double deltaCl = ((deltaCla2 - deltaCla1) / daoa) * del_aoa + deltaCla1;

            double Cd1 = shuttleCdTable[m_idx, a_idx];
            double Cd2 = shuttleCdTable[m_idx, a_idx + 1];
            double Cd3 = shuttleCdTable[m_idx + 1, a_idx];
            double Cd4 = shuttleCdTable[m_idx + 1, a_idx + 1];

            double Cda1 = ((Cd3 - Cd1) / dmach) * del_mach + Cd1;
            double Cda2 = ((Cd4 - Cd2) / dmach) * del_mach + Cd2;
            double Cd = ((Cda2 - Cda1) / daoa) * del_aoa + Cda1;

            double deltaCd1 = shuttleDeltaCdTable[m_idx, a_idx];
            double deltaCd2 = shuttleDeltaCdTable[m_idx, a_idx + 1];
            double deltaCd3 = shuttleDeltaCdTable[m_idx + 1, a_idx];
            double deltaCd4 = shuttleDeltaCdTable[m_idx + 1, a_idx + 1];

            double deltaCda1 = ((deltaCd3 - deltaCd1) / dmach) * del_mach + deltaCd1;
            double deltaCda2 = ((deltaCd4 - deltaCd2) / dmach) * del_mach + deltaCd2;
            double deltaCd = ((deltaCda2 - deltaCda1) / daoa) * del_aoa + deltaCda1;

            double Clf = Cl + deltaCl;
            double Cdf = Cd + deltaCd;

            //UnityEngine.Debug.Log(String.Format("aoa, mach, aoa1, aoa2, mach1, mach2, {0}, {1}, {2}, {3}, {4}, {5}", aoa, mach, aoa1, aoa2, mach1, mach2));
            //UnityEngine.Debug.Log(String.Format("cl1, cl2, cl3, cl4, {0}, {1}, {2}, {3}", Cl1, Cl2, Cl3, Cl4));
            //UnityEngine.Debug.Log(String.Format("cla1, cla2, clf, cl, {0}, {1}, {2} ", Cla1, Cla2, Cl));


            return new double[] { Clf, Cdf };
        }

    }
}
